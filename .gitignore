import time
import matplotlib.pyplot as plt
from prettytable import PrettyTable

# Fungsi pencarian elemen secara iteratif
def search_iterative(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

# Fungsi pencarian elemen secara rekursif
def search_recursive(arr, target, index=0):
    if index >= len(arr):
        return -1
    if arr[index] == target:
        return index
    return search_recursive(arr, target, index + 1)

# Fungsi untuk mengukur waktu eksekusi
def measure_time(func, *args):
    start = time.time()
    result = func(*args)
    end = time.time()
    return result, end - start

# Input data array
print("Masukkan data array (pisahkan dengan koma, contoh: 5,2,9,1):")
try:
    input_data = list(map(int, input("Array: ").split(",")))
except ValueError:
    print("Input tidak valid! Pastikan memasukkan angka yang dipisahkan dengan koma.")
    exit()

# Input elemen yang dicari
print("Masukkan elemen yang ingin dicari:")
try:
    target = int(input("Target: "))
except ValueError:
    print("Input tidak valid! Pastikan memasukkan angka.")
    exit()

# Salin array untuk proses iteratif dan rekursif
arr_iter = input_data.copy()
arr_recur = input_data.copy()

# Tabel hasil pencarian
result_table = PrettyTable()
result_table.field_names = ["Method", "Index Found", "Time (s)"]

# Pencarian iteratif
iter_result, iter_time = measure_time(search_iterative, arr_iter, target)
result_table.add_row(["Iterative", iter_result, f"{iter_time:.6f}"])

# Pencarian rekursif
recur_result, recur_time = measure_time(search_recursive, arr_recur, target)
result_table.add_row(["Recursive", recur_result, f"{recur_time:.6f}"])

# Menampilkan tabel hasil pencarian
print("\nHasil Pencarian:")
print(result_table)

# Membuat grafik perbandingan waktu pencarian
plt.figure(figsize=(6, 4))
methods = ["Iterative", "Recursive"]
times = [iter_time, recur_time]

plt.bar(methods, times, color=['blue', 'red'])
plt.ylabel("Time (s)")
plt.title("Time Comparison of Iterative and Recursive Search")
plt.tight_layout()
plt.show()
